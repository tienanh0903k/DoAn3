create models 
npx sequelize-cli model:generate --name OrderDetail --attributes id:string,product_id:string,email:string
npx sequelize-cli db:migrate



'use strict';
module.exports = {
  up: async (queryInterface, Sequelize) => {
    await queryInterface.createTable('User', {
      id: {
        allowNull: false,
        autoIncrement: true,
        primaryKey: true,
        type: Sequelize.INTEGER
      },
      fullname: {
        type: Sequelize.STRING,
        allowNull: false
      },
      email: {
        type: Sequelize.STRING,
        allowNull: false
      },
      phone_number: {
        type: Sequelize.STRING
      },
      address: {
        type: Sequelize.STRING
      },
      password: {
        type: Sequelize.STRING,
        allowNull: false
      },
      role_id: {
        type: Sequelize.INTEGER
      },
      created_at: {
        type: Sequelize.DATE,
        allowNull: false,
        defaultValue: Sequelize.literal('CURRENT_TIMESTAMP')
      },
      updated_at: {
        type: Sequelize.DATE,
        allowNull: false,
        defaultValue: Sequelize.literal('CURRENT_TIMESTAMP')
      },
      status: {
        type: Sequelize.INTEGER,
        allowNull: false
      }
    });
  },
  down: async (queryInterface, Sequelize) => {
    await queryInterface.dropTable('User');
  }
};


'use strict';
const { Model } = require('sequelize');

module.exports = (sequelize, DataTypes) => {
  class User extends Model {
    static associate(models) {
      // define association here
    }
  }

  User.init({
    id: {
      type: DataTypes.INTEGER,
      primaryKey: true,
      autoIncrement: true
    },
    fullname: {
      type: DataTypes.STRING,
      allowNull: false
    },
    email: {
      type: DataTypes.STRING,
      allowNull: false
    },
    phone_number: {
      type: DataTypes.STRING
    },
    address: {
      type: DataTypes.STRING
    },
    password: {
      type: DataTypes.STRING,
      allowNull: false
    },
    role_id: {
      type: DataTypes.INTEGER
    },
    created_at: {
      type: DataTypes.DATE,
      allowNull: false,
      defaultValue: DataTypes.NOW // Giá trị mặc định là thời gian hiện tại
    },
    updated_at: {
      type: DataTypes.DATE,
      allowNull: false,
      defaultValue: DataTypes.NOW // Giá trị mặc định là thời gian hiện tại
    },
    status: {
      type: DataTypes.INTEGER,
      allowNull: false
    }
  }, {
    sequelize,
    modelName: 'User',
    tableName: 'User', // Tên bảng trong SQL
    timestamps: false, // Tắt tự động tạo timestamps nếu không cần
    underscored: true // Giữ tên cột không thay đổi
  });


  User.addHook('beforeUpdate', (user, options) => {
    user.updated_at = new Date(); // Cập nhật giá trị của trường updated_at
  });

  return User;
};



----- DetailProduct-------------

'use strict';
const {
  Model
} = require('sequelize');

module.exports = (sequelize, DataTypes) => {
  class DetailProduct extends Model {
    static associate(models) {
      // Định nghĩa mối quan hệ với các model khác nếu có
      DetailProduct.belongsTo(models.Product, { foreignKey: 'product_id' }); // Mối quan hệ 1-n với bảng Product
    }
  };
  DetailProduct.init({
    product_id: DataTypes.INTEGER,
    thumbnail: DataTypes.STRING(500),
    color: DataTypes.STRING(10),
  }, {
    sequelize,
    modelName: 'DetailProduct',
    tableName: 'DetailProduct',
    timestamps: true 
  });
  return DetailProduct;
};




-md:
'use strict';

module.exports = {
  up: async (queryInterface, Sequelize) => {
    await queryInterface.createTable('DetailProduct', {
      id: {
        allowNull: false,
        autoIncrement: true,
        primaryKey: true,
        type: Sequelize.INTEGER
      },
      product_id: {
        type: Sequelize.INTEGER, 
        allowNull: false,
        references: {
          model: 'Product', 
          key: 'id'        
        }
      },
      thumbnail: {
        type: Sequelize.STRING(500)
      },
      color: {
        type: Sequelize.STRING(10)
      },
      createdAt: {
        allowNull: true,
        type: Sequelize.DATE
      },
      updatedAt: {
        allowNull: true,
        type: Sequelize.DATE
      }
    });
  },

  down: async (queryInterface, Sequelize) => {
    await queryInterface.dropTable('DetailProduct');
  }
};
